openapi: 3.0.0
info:
  title: NCASA
  description: NCASA
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://ncasa.scodus.com/api
    description: Base URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: user
  - name: user > general-user
  - name: company
  - name: banner
  - name: about
  - name: job
  - name: job > job crud by company users
  - name: event
  - name: learning-center
  - name: settings
  - name: home
  - name: blog and news
  - name: magazine and publication
  - name: album and gallery
  - name: newsletter
  - name: contact-us
  - name: complain-section
  - name: volunteer
  - name: thread
  - name: comment
  - name: upvote
  - name: downvote
  - name: quick link
  - name: our team
  - name: our team category
paths:
  /user/general/register:
    post:
      tags:
        - user > general-user
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                email:
                  type: string
                  example: general1@general.com
                name:
                  type: string
                  example: general1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - user
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: member1@member.com
                password:
                  type: integer
                  example: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /logout:
    post:
      tags:
        - user
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /refresh-token/{refresh_token}:
    post:
      tags:
        - user
      summary: refresh-token
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profile:
    get:
      tags:
        - user
      summary: my-profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/company:
    get:
      tags:
        - user
      summary: user company list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profile/password-change/update:
    post:
      tags:
        - user
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: integer
                  example: '12345'
                new_password:
                  type: integer
                  example: '1234'
                new_password_confirmation:
                  type: integer
                  example: '1234'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-mail:
    post:
      tags:
        - user
      summary: send reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user1@user.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password:
    post:
      tags:
        - user
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: integer
                  example: '12345'
                password_confirmation:
                  type: integer
                  example: '12345'
                token:
                  type: string
                  example: >-
                    kjF4GBMpxhu7UNmE0N2X7BvBjQW7K3tgsBxkJXobawYrV3azSVGBPWn6QapnieiH
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account-verification:
    post:
      tags:
        - user
      summary: accountVerification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: '43'
                token:
                  type: string
                  example: cLlAQOof3z6ZN1zRlT9QCG3T7UXJzJW39fZKzCpOWqH2kuYU8R
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /resend-account-verification-mail:
    post:
      tags:
        - user
      summary: resend email verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company:
    get:
      tags:
        - company
      summary: company
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/{slug}:
    get:
      tags:
        - company
      summary: company-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: shay-hopper
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/by/{id}:
    get:
      tags:
        - company
      summary: company-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /banner:
    get:
      tags:
        - banner
      summary: banner
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /banner/{slug}:
    get:
      tags:
        - banner
      summary: banner-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: veritatis-quia-ut-re
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /banner/by/{id}:
    get:
      tags:
        - banner
      summary: banner-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /about:
    get:
      tags:
        - about
      summary: about
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /about/{slug}:
    get:
      tags:
        - about
      summary: about-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: dolor-amet-beatae-s
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /about/by/{id}:
    get:
      tags:
        - about
      summary: about-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job:
    post:
      tags:
        - job > job crud by company users
      summary: job-create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: avasdf
                position:
                  type: integer
                  example: '111'
                image:
                  type: string
                  format: binary
                description:
                  type: string
                  example: 111@gmail.com
                job_type:
                  type: string
                  example: Pre-articleship
                location:
                  type: string
                  example: Ktm1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - job
      summary: job paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/{slug}:
    post:
      tags:
        - job > job crud by company users
      summary: job-update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: ABC
                position:
                  type: string
                  example: HResource
                image:
                  type: string
                  format: binary
                description:
                  type: string
                  example: abc@gmail.com
                job_type:
                  type: string
                  example: Articleship
                location:
                  type: string
                  example: Ktm
                delete_file:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: abc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - job > job crud by company users
      summary: job-delete
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: quas-anim-molestiae
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - job
      summary: job-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: abc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job-by-company:
    get:
      tags:
        - job > job crud by company users
      summary: job by company paginated
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job-by-company/job-applications:
    get:
      tags:
        - job > job crud by company users
      summary: job applications of job by company
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/all:
    get:
      tags:
        - job
      summary: job
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/by/{id}:
    get:
      tags:
        - job
      summary: job-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/{slug}/job-apply:
    post:
      tags:
        - job
      summary: job-apply
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ABC
                address:
                  type: string
                  example: 'qwertyuiosdfghjkcvbn f sdf sd fdds '
                cv:
                  type: string
                  format: binary
                email:
                  type: string
                  example: abc@gmail.com
                phone:
                  type: integer
                  example: '9876543210'
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: abc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/applied-by/user:
    get:
      tags:
        - job
      summary: job-applied
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /job/applied-by/user/delete/{id}:
    delete:
      tags:
        - job
      summary: job-applied-delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/all:
    get:
      tags:
        - event
      summary: event
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event:
    get:
      tags:
        - event
      summary: event paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/filter/by-dates:
    get:
      tags:
        - event
      summary: event filter by dates
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
          example: '2023-02-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2023-02-28'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/{slug}:
    get:
      tags:
        - event
      summary: event-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: amet-dolores-possim
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/by/{id}:
    get:
      tags:
        - event
      summary: event-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/{slug}/event-apply:
    post:
      tags:
        - event
      summary: event-apply
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: eABC
                email:
                  type: string
                  example: eabc@gmail.com
                phone:
                  type: integer
                  example: '9876543210'
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: amet-dolores-possim
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/applied-by/user:
    get:
      tags:
        - event
      summary: event-applied
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /event/applied-by/user/delete/{id}:
    delete:
      tags:
        - event
      summary: event-applied-delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course:
    get:
      tags:
        - learning-center
      summary: course
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course/{slug}:
    get:
      tags:
        - learning-center
      summary: course-single
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sint-ut-corporis-ear
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course/by/{id}:
    get:
      tags:
        - learning-center
      summary: course-single-by
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course-note:
    get:
      tags:
        - learning-center
      summary: course-note
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course-note/{slug}:
    get:
      tags:
        - learning-center
      summary: course-note-single
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: delectus-incidunt
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course-note/by/{id}:
    get:
      tags:
        - learning-center
      summary: course-note-single-by
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course/{slug}/coursenotes:
    get:
      tags:
        - learning-center
      summary: course-coursenotes
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sint-ut-corporis-ear
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /course/{id}/coursenotes/by:
    get:
      tags:
        - learning-center
      summary: course-coursenotes-by
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /site-setting:
    get:
      tags:
        - settings
      summary: site-settings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /home:
    get:
      tags:
        - home
      summary: home
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /blog/all:
    get:
      tags:
        - blog and news
      summary: blog
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /blog:
    get:
      tags:
        - blog and news
      summary: blog paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /blog/{slug}:
    get:
      tags:
        - blog and news
      summary: blog-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: test
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user-blog:
    post:
      tags:
        - blog and news
      summary: user blog store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title1
                description:
                  type: string
                  example: description1
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  description: nullable
                  example: Active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - blog and news
      summary: user blog list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: lmit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user-blog/{blog_id}:
    get:
      tags:
        - blog and news
      summary: user blog single
      security:
        - bearerAuth: []
      parameters:
        - name: blog_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - blog and news
      summary: user blog update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title1 edit
                description:
                  type: string
                  example: edit
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  example: Active
                _method:
                  type: string
                  example: patch
                delete_file:
                  type: string
                  description: nullable
      security:
        - bearerAuth: []
      parameters:
        - name: blog_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - blog and news
      summary: user blog delete
      security:
        - bearerAuth: []
      parameters:
        - name: blog_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /blog/by/{id}:
    get:
      tags:
        - blog and news
      summary: blog-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /news/all:
    get:
      tags:
        - blog and news
      summary: news
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /news:
    get:
      tags:
        - blog and news
      summary: news paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /news/{slug}:
    get:
      tags:
        - blog and news
      summary: news-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: voluptas-distinctio
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /news/by/{id}:
    get:
      tags:
        - blog and news
      summary: news-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /magazine/all:
    get:
      tags:
        - magazine and publication
      summary: magazine
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /magazine:
    get:
      tags:
        - magazine and publication
      summary: magazine paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /magazine/{slug}:
    get:
      tags:
        - magazine and publication
      summary: magazine-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: elit-totam-numquam
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /magazine/by/{id}:
    get:
      tags:
        - magazine and publication
      summary: magazine-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/all:
    get:
      tags:
        - album and gallery
      summary: album
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/by/{id}:
    get:
      tags:
        - album and gallery
      summary: album-single-by
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/{slug}:
    get:
      tags:
        - album and gallery
      summary: album-single
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sint-fugit-ut-non-c
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/{id}/with-gallery:
    get:
      tags:
        - album and gallery
      summary: album-single-with-gallery
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/{id}/gallery/all:
    get:
      tags:
        - album and gallery
      summary: albumGallery
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album:
    get:
      tags:
        - album and gallery
      summary: album paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /album/{id}/gallery:
    get:
      tags:
        - album and gallery
      summary: albumGallery paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /newsletter:
    post:
      tags:
        - newsletter
      summary: newsletter
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: newsletter@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /contact-us:
    post:
      tags:
        - contact-us
      summary: contact-us
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Contact Us 1
                subject:
                  type: string
                  example: subject 1
                message:
                  type: string
                  example: message 1ds,,fnsdfsdnf asdf  ds afd ds fs dsa
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - contact-us
      summary: contact-us
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /complain:
    post:
      tags:
        - complain-section
      summary: complain
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ABC
                email:
                  type: string
                  example: abc@gmail.com
                message:
                  type: string
                  example: wertuioxcvbnm,.xcvbnm,.f fdg f g fd gf df g fd gfd gf
                to:
                  type: string
                  example: ICAN
                status:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /volunteer:
    post:
      tags:
        - volunteer
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
                email:
                  type: string
                  example: email@email.com
                phone:
                  type: integer
                  example: '91287346'
                address:
                  type: string
                  example: kljfsadlk fsadl falsd fh
                level:
                  type: string
                  example: CAP1
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - volunteer
      summary: get
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user-thread:
    get:
      tags:
        - thread
      summary: list all
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: page number | nullable
        - name: limit
          in: query
          schema:
            type: integer
          description: limit quicklinks per page | nullable (default is 10 if null)
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - thread
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title1
                description:
                  type: string
                  example: description 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /thread:
    get:
      tags:
        - thread
      summary: list all public
      security:
        - noauthAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: page number | nullable
        - name: limit
          in: query
          schema:
            type: integer
          description: limit quicklinks per page | nullable (default is 10 if null)
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user-thread/{thread_slug}:
    get:
      tags:
        - thread
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: thread_slug
          in: path
          schema:
            type: string
          required: true
          example: title1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - thread
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title edit2
                description:
                  type: string
                  example: description edit
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: thread_slug
          in: path
          schema:
            type: string
          required: true
          example: title1-2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - thread
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: thread_slug
          in: path
          schema:
            type: string
          required: true
          example: title1-2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /thread/{thread_slug}:
    get:
      tags:
        - thread
      summary: show public
      security:
        - noauthAuth: []
      parameters:
        - name: thread_slug
          in: path
          schema:
            type: string
          required: true
          example: title1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /comment:
    post:
      tags:
        - comment
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thread_id:
                  type: integer
                  example: '1'
                description:
                  type: string
                  example: description 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /comment/{comment_id}:
    post:
      tags:
        - comment
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: description edit
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: comment_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - comment
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /upvote:
    post:
      tags:
        - upvote
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  example: '9'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /upvote/{comment_id}:
    delete:
      tags:
        - upvote
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: comment_id
          in: path
          schema:
            type: integer
          required: true
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /downvote:
    post:
      tags:
        - downvote
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment_id:
                  type: integer
                  example: '9'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /downvote/{comment_id}:
    delete:
      tags:
        - downvote
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: comment_id
          in: path
          schema:
            type: integer
          required: true
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /quick-link:
    get:
      tags:
        - quick link
      summary: quick-link
      parameters:
        - name: page
          in: query
          schema:
            type: string
          description: page number | nullable
        - name: limit
          in: query
          schema:
            type: integer
          description: limit quicklinks per page | nullable (default is 10 if null)
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team:
    get:
      tags:
        - our team
      summary: our-team
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team/index:
    get:
      tags:
        - our team
      summary: our-team-by-category
      parameters:
        - name: slug
          in: query
          schema:
            type: string
          example: other
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team/{slug}:
    get:
      tags:
        - our team
      summary: our-team-single-by-slug
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: keane-palmer
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team/by/22:
    get:
      tags:
        - our team
      summary: our-team-single-by-id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team-category:
    get:
      tags:
        - our team category
      summary: our-team-category
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /our-team-category/{slug}:
    get:
      tags:
        - our team category
      summary: our-team-category-single-by-slug
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: mollit-voluptas-aute
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
